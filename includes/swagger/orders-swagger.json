{
  "openapi": "3.0.0",
  "info": {
    "title": "TrinityKitWP Orders API",
    "description": "API para gerenciamento de pedidos personalizados",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/wp-json/trinitykitcms-api/v1",
      "description": "API TrinityKitCMS"
    }
  ],
  "paths": {
    "/orders": {
      "post": {
        "summary": "Criar novo pedido",
        "description": "Cria um novo pedido personalizado para uma criança",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "childName",
                  "childAge",
                  "childGender",
                  "skinTone",
                  "parentName",
                  "email",
                  "phone",
                  "photo"
                ],
                "properties": {
                  "childName": {
                    "type": "string",
                    "description": "Nome da criança",
                    "example": "Luna Trindade"
                  },
                  "childAge": {
                    "type": "integer",
                    "description": "Idade da criança (entre 2 e 8 anos)",
                    "minimum": 2,
                    "maximum": 8,
                    "example": 5
                  },
                  "childGender": {
                    "type": "string",
                    "description": "Gênero da criança",
                    "enum": ["menino", "menina"],
                    "example": "menina"
                  },
                  "skinTone": {
                    "type": "string",
                    "description": "Tom de pele da criança",
                    "enum": ["claro", "medio", "escuro"],
                    "example": "claro"
                  },
                  "parentName": {
                    "type": "string",
                    "description": "Nome do responsável",
                    "example": "Lucas Trindade"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "E-mail do responsável",
                    "example": "lucas@email.com"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Telefone do responsável (formato: (99) 99999-9999)",
                    "pattern": "^\\(\\d{2}\\)\\s\\d{5}-\\d{4}$",
                    "example": "(11) 99999-9999"
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary",
                    "description": "Foto do rosto da criança (JPG, PNG ou JPEG, máximo 5MB)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pedido criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Pedido criado com sucesso"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "order_id": {
                          "type": "integer",
                          "example": 123
                        },
                        "status": {
                          "type": "string",
                          "example": "created"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro de validação",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "missing_fields"
                        },
                        "message": {
                          "type": "string",
                          "example": "Todos os campos são obrigatórios"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "example": 400
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "invalid_phone"
                        },
                        "message": {
                          "type": "string",
                          "example": "Telefone inválido. Use o formato (99) 99999-9999"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "example": 400
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Erro de autenticação",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "invalid_api_key"
                    },
                    "message": {
                      "type": "string",
                      "example": "API Key inválida ou não fornecida"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "integer",
                          "example": 401
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "order_creation_failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Erro ao criar o pedido"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "integer",
                          "example": 500
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  }
}
